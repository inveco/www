jQuery( document ).ready( function( $ ) {
		
	var ul = $(".sections"),
		li = ul.children("li"),
		handle = $("html, body"),
		html = handle.filter("html"),
		touch = html.hasClass("touch"),
		menu = $(".veco-anchor ul"),
		cover = li.filter(".cover"),
		counter = $(".landing .counter span"),
		plugin = new veco( ul, { speed: parseInt( veco_home.speed ), ease: veco_home.ease } ),
		portfolio = $(".portfolio")
			
	ul.imagesLoaded( {
		progress: function( broken, total, loaded ) {
			counter.css( "width", ( loaded.length / total.length * 100 ) + "%" )
		},
		callback: theme_start		
	} )

	function theme_start() {

		plugin.start()

		if ( cover.length )
			center_covers()

		html.addClass("prepared")

		$(".landing").fadeOut( 500 )

	}
	
	if ( cover.length ) {
		
		$( window ).on( "resize", center_covers )
		
		cover
		.find("h1")
		.fitText( 1, { maxFontSize: "50px", minFontSize: "24px" } )
		
		if ( veco_home.skip ) {
		
			cover.on( "click", function() {
				plugin.jump("forward")
			} )

		}
		
	}
	
	if ( ! touch ) {
		
		li.on( "click", function() {
			if ( ! $( this ).hasClass("veco-top") )
				plugin.jump( "#" + $( this ).attr("id") )		
		} )
		
		ul.on( "move", $.powerTip.closeTip )
		
	}
	
	function center_covers() {

		cover
		.children("div")
		.each( function() {

			div = $( this ),
			height = div.height() / 2,
			margin = ( div.parent("li").height() / 2 ) - height
							
			div.css( "margin-top", margin )

		} )
		
	}
		
	portfolio
	.find(".cats [data-slug]")
	.on( "click", function( e ) {
		
		trigger = $( this ),
		slug = trigger.data("slug"),
		portfolio = trigger.parents(".portfolio"),
		list = portfolio.children(".portfolio-list"),
		li = list.children("li")
		
		if ( portfolio.hasClass("hold") )
			return
							
		portfolio.addClass("hold")
		
		if ( trigger.hasClass("active") ) {
						
			li
			.addClass("hidden")
			.slice( 0, 6 )
			.removeClass("hidden")
												
			trigger.removeClass("active")
			
			portfolio.removeClass("hold")
			
		}
		else {
						
			trigger
			.addClass("active")
			.siblings(".active")
			.removeClass("active")
			
			offset = portfolio.parents(".sections > li").offset().top
			
			if ( $( document ).scrollTop() != offset )
				handle.animate( { scrollTop: offset }, { duration: 200, queue: false } )
			
			if ( ! trigger.data("loaded") ) {
											
				trigger.data( "loaded", true ) 

				$.ajax( {
					url: veco_home.url,
					data: {
						action: "veco_portfolio_filter",
						referer: veco_home.ref,
						id: portfolio.data("id"),
						slug: slug
					},
					dataType: "html",
					type: "post"
				} )
				.done( function( result ) {
																																
					$( result )
					.filter("li")
					.each( function() {
											
						if ( ! li.filter( "#" + this.id ).length )
							$( this )
							.addClass("hidden")
							.appendTo( list )							
										
					} )
					
				} )
				.always( function() {
				
					portfolio.removeClass("hold")
					
					portfolio_filter( list.children("li"), slug )
					
				} )
				
			}
			else {
			
				portfolio_filter( li, slug )
				
				portfolio.removeClass("hold")
				
			}
		
		}
		
		e.preventDefault()
		
	} )
	
	function portfolio_filter( li, cat ) {
				
		li
		.addClass("hidden")
		.filter( "[data-cat*='" +  cat + "']" )
		.slice( 0, 6 )
		.removeClass("hidden")
		
		fittext_set( li )				
	
	}
	
	function fittext_set( li ) {
		li
		.find("h3")
		.fitText( .85 )		
	}
	
	fittext_set( portfolio.find(".portfolio-list > li") )
	
} );